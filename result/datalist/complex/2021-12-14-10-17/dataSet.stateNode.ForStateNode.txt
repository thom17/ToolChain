@startuml
class ClassComplex{
__**<color:orange>Complex Info</color>**__
	memberScor = 11
	extendsClassScore = 1
	callScore = 37
	callByScore = 37
	methodNum = 10
	memberNum = 6
	constructorNum = 1
	selfCoverage = 3
	needCallBy = 13
	ABS = 91
	REL = 5
	ABS = 91
	REL = 5
	coverage = 18.0%
__**<color:green>has list</color>**__
	<color:green>java.util.List init (2)
	<color:green>java.util.ArrayList<org.eclipse.jdt.core.dom.Statement> bodyList (2)
	<color:green>java.lang.String repeatCondition (1)
	<color:green>dataSet.stateNode.StateNode cond (2)
	<color:green>dataSet.stateNode.StateNode condElseNode (2)
	<color:green>java.util.ArrayList<dataSet.stateNode.StateNode> forFinList (2)
	<color:orange>new ForStateNode(org.eclipse.jdt.core.dom.ForStatement) (5)
	<color:orange>void setCond(dataSet.stateNode.StateNode) (7)
	<color:orange>void setForFin(java.util.ArrayList<dataSet.stateNode.StateNode>) (7)
	<color:orange>void setCondElseNode(dataSet.stateNode.StateNode) (7)
	<color:orange>String getForLine() (6)
	<color:green>StateNode getCondNode() (0)
	<color:green>ArrayList<StateNode> getForFinList() (0)
	<color:green>List getInitList() (0)
	<color:green>StateNode getCond() (0)
	<color:red>StateNode getLastFin() (10)
}

class dataSet.stateNode.ForStateNode.ForStateNode1694804085 as "ForStateNode(org.eclipse.jdt.core.dom.ForStatement)" 
{
	pram : (org.eclipse.jdt.core.dom.ForStatement )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.ForStateNode(org.eclipse.jdt.core.dom.ForStatement)
	Sig : ForStateNode(org.eclipse.jdt.core.dom.ForStatement)
	__**<color:orange>Complex Info</color>**__
	parameter Score : 2
	classCall Score : 3
	Call Score : 3
	CallBy Score : 2
	memberUse Score : 0
	localValue Score : 1
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 1
	cyclomatic : 1
	State Node lineNum: 3
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 28.75488750216347
	Volume : 65.72920075410866
	Diffifculty: 4.0
	Effort : 262.91680301643464
	ABS Score : 5
	Relative Score : 5
}
class dataSet.stateNode.ForStateNode.setCond904031493 as "setCond(dataSet.stateNode.StateNode)" 
{
	pram : (dataSet.stateNode.StateNode )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.setCond(dataSet.stateNode.StateNode)
	Sig : setCond(dataSet.stateNode.StateNode)
	__**<color:orange>Complex Info</color>**__
	parameter Score : 2
	classCall Score : 3
	Call Score : 5
	CallBy Score : 2
	memberUse Score : 2
	localValue Score : 1
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 2
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 1
	State Node bifurSize : 0
	Calculated Estunated Program Length: 10.0
	Volume : 20.67970000576925
	Diffifculty: 4.0
	Effort : 82.718800023077
	ABS Score : 7
	Relative Score : 7
}
class dataSet.stateNode.ForStateNode.setForFin704277349 as "setForFin(java.util.ArrayList<dataSet.stateNode.StateNode>)" 
{
	pram : (java.util.ArrayList<dataSet.stateNode.StateNode> )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.setForFin(java.util.ArrayList<dataSet.stateNode.StateNode>)
	Sig : setForFin(java.util.ArrayList<dataSet.stateNode.StateNode>)
	__**<color:orange>Complex Info</color>**__
	parameter Score : 2
	classCall Score : 3
	Call Score : 5
	CallBy Score : 2
	memberUse Score : 2
	localValue Score : 1
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 2
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 1
	State Node bifurSize : 0
	Calculated Estunated Program Length: 12.754887502163468
	Volume : 25.26619429851844
	Diffifculty: 3.3333333333333335
	Effort : 84.22064766172814
	ABS Score : 7
	Relative Score : 7
}
class dataSet.stateNode.ForStateNode.setCondElseNode130494156 as "setCondElseNode(dataSet.stateNode.StateNode)" 
{
	pram : (dataSet.stateNode.StateNode )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.setCondElseNode(dataSet.stateNode.StateNode)
	Sig : setCondElseNode(dataSet.stateNode.StateNode)
	__**<color:orange>Complex Info</color>**__
	parameter Score : 2
	classCall Score : 3
	Call Score : 5
	CallBy Score : 2
	memberUse Score : 2
	localValue Score : 1
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 2
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 1
	State Node bifurSize : 0
	Calculated Estunated Program Length: 12.754887502163468
	Volume : 22.458839376460833
	Diffifculty: 2.6666666666666665
	Effort : 59.89023833722889
	ABS Score : 7
	Relative Score : 7
}
class dataSet.stateNode.ForStateNode.getForLine1195403585 as "getForLine()" 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getForLine()
	Sig : getForLine()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 3
	Call Score : 6
	CallBy Score : 3
	memberUse Score : 1
	localValue Score : 1
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 5
	cyclomatic : 1
	State Node lineNum: 10
	State Node Num : 0
	State Node callListSize: 3
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 71.54887502163469
	Volume : 215.22355371615927
	Diffifculty: 5.625
	Effort : 1210.6324896533959
	ABS Score : 6
	Relative Score : 6
}
class dataSet.stateNode.ForStateNode.getCondNode1642905321 as "getCondNode()"#line:green 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getCondNode()
	Sig : getCondNode()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 0
	Call Score : 0
	CallBy Score : 0
	memberUse Score : 0
	localValue Score : 0
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 0
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 2.0
	Volume : 4.754887502163468
	Diffifculty: 1.0
	Effort : 4.754887502163468
	ABS Score : 0
	Relative Score : 0
}
class dataSet.stateNode.ForStateNode.getForFinList464994546 as "getForFinList()"#line:green 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getForFinList()
	Sig : getForFinList()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 0
	Call Score : 0
	CallBy Score : 0
	memberUse Score : 0
	localValue Score : 0
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 0
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 2.0
	Volume : 4.754887502163468
	Diffifculty: 1.0
	Effort : 4.754887502163468
	ABS Score : 0
	Relative Score : 0
}
class dataSet.stateNode.ForStateNode.getInitList624475142 as "getInitList()"#line:green 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getInitList()
	Sig : getInitList()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 0
	Call Score : 0
	CallBy Score : 0
	memberUse Score : 0
	localValue Score : 0
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 0
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 2.0
	Volume : 4.754887502163468
	Diffifculty: 1.0
	Effort : 4.754887502163468
	ABS Score : 0
	Relative Score : 0
}
class dataSet.stateNode.ForStateNode.getCond1643565953 as "getCond()"#line:green 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getCond()
	Sig : getCond()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 0
	Call Score : 0
	CallBy Score : 0
	memberUse Score : 0
	localValue Score : 0
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 0
	cyclomatic : 1
	State Node lineNum: 1
	State Node Num : 0
	State Node callListSize: 0
	State Node repeatSize : 0
	State Node writeSize : 0
	State Node bifurSize : 0
	Calculated Estunated Program Length: 2.0
	Volume : 4.754887502163468
	Diffifculty: 1.0
	Effort : 4.754887502163468
	ABS Score : 0
	Relative Score : 0
}
class dataSet.stateNode.ForStateNode.getLastFin1701388960 as "getLastFin()"#back:salmon 
{
	pram : ( )
	SrcOwnClassName : dataSet.stateNode.ForStateNode
	SrcSig : dataSet.stateNode.ForStateNode.getLastFin()
	Sig : getLastFin()
	__**<color:orange>Complex Info</color>**__
	parameter Score : 0
	classCall Score : 3
	Call Score : 10
	CallBy Score : 3
	memberUse Score : 5
	localValue Score : 2
	exp Score : 0
	repeat Score : 0
	brench Score : 0
	callCountNum : 10
	cyclomatic : 1
	State Node lineNum: 9
	State Node Num : 0
	State Node callListSize: 5
	State Node repeatSize : 0
	State Node writeSize : 1
	State Node bifurSize : 1
	Calculated Estunated Program Length: 67.75720079023742
	Volume : 151.26748332105768
	Diffifculty: 11.142857142857142
	Effort : 1685.5519570060712
	ABS Score : 10
	Relative Score : 10
}

@enduml