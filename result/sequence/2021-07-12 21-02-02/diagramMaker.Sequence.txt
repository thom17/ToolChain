@startuml
group void main(dataSet.DataList)
	Sequence->Sequence : makeFile(java.lang.String, java.lang.String)
	Sequence->Process : waitFor()
		Process-->Sequence
	Sequence->PrintStream : println(java.lang.String)
		PrintStream-->Sequence
	Sequence->DataList : getClassList()
		DataList-->Sequence
end

group String makeString(dataSet.Class)
	Sequence->StringBuilder : append(java.lang.String)
		StringBuilder-->Sequence
	Sequence->Sequence : drawConnect(dataSet.Function, java.util.Stack<java.lang.String>, java.lang.String, java.lang.StringBuilder)
	Sequence->StringBuilder : toString()
		StringBuilder-->Sequence
end

group ArrayList<Function> getCallerFunList(dataSet.Class)
	Sequence->ArrayList : add(E)
		ArrayList-->Sequence
	Sequence->DataList : getClassList()
		DataList-->Sequence
	Sequence->Data_base : getCallList()
		Data_base-->Sequence
	Sequence->DataList : getFunctionList()
		DataList-->Sequence
	Sequence->Data_base : getHasList()
		Data_base-->Sequence
end

group void drawConnect(dataSet.Function, java.util.Stack<java.lang.String>, java.lang.String, java.lang.StringBuilder)
	Sequence->StringBuilder : append(java.lang.String)
		StringBuilder-->Sequence
	Sequence->Vector : add(E)
		Vector-->Sequence
	Sequence->Sequence : drawConnect(dataSet.Function, java.util.Stack<java.lang.String>, java.lang.String, java.lang.StringBuilder)
	Sequence->DataList : getFunctionList()
		DataList-->Sequence
	Sequence->Data_base : getCallList()
		Data_base-->Sequence
end

group void makeFile(java.lang.String, java.lang.String)
	Sequence->Writer : write(java.lang.String)
		Writer-->Sequence
	Sequence->OutputStreamWriter : close()
		OutputStreamWriter-->Sequence
end

@enduml
