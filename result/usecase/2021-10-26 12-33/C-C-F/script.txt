@startuml
 left to right direction

actor ClassDiagram as actor2015261478
actor DataListDiagram as actor577245010
actor CodeStateDiagram as actor1624788833
rectangle ArrayList{
	usecase size as UC1622135821
		actor1624788833 -- UC1622135821
}
rectangle CodeStateDiagram{
	usecase makeFile as UC986944742
		actor1624788833 -- UC986944742
	usecase makeString as UC1774468680
		actor1624788833 -- UC1774468680
	usecase makeOneState as UC1964926542
		actor1624788833 -- UC1964926542
	usecase connectDef as UC402978317
		actor1624788833 -- UC402978317
}
rectangle DataListDiagram{
	usecase makeFile as UC1513029997
		actor577245010 -- UC1513029997
	usecase classExtends as UC1481751887
		actor577245010 -- UC1481751887
	usecase classDef as UC1999135802
		actor577245010 -- UC1999135802
	usecase addHasList as UC2094115865
		actor577245010 -- UC2094115865
	usecase addCallList as UC49547843
		actor577245010 -- UC49547843
}
rectangle Process{
	usecase waitFor as UC1296928719
		actor577245010 -- UC1296928719
}
rectangle Function{
	usecase getOwnClass as UC701681793
		actor577245010 -- UC701681793
	usecase getName as UC1103132232
		actor577245010 -- UC1103132232
		actor2015261478 -- UC1103132232
	usecase getTypeName as UC1088744071
		actor1624788833 -- UC1088744071
		actor577245010 -- UC1088744071
		actor2015261478 -- UC1088744071
	usecase printParameterType as UC1484275564
		actor1624788833 -- UC1484275564
		actor577245010 -- UC1484275564
		actor2015261478 -- UC1484275564
}
rectangle Var{
	usecase getName as UC1389432760
		actor577245010 -- UC1389432760
		actor2015261478 -- UC1389432760
}
rectangle Class{
	usecase getName as UC2008159348
		actor577245010 -- UC2008159348
		actor2015261478 -- UC2008159348
}
rectangle StringBuilder{
	usecase append as UC1803890702
		actor1624788833 -- UC1803890702
		actor577245010 -- UC1803890702
		actor2015261478 -- UC1803890702
	usecase toString as UC984567559
		actor1624788833 -- UC984567559
		actor577245010 -- UC984567559
		actor2015261478 -- UC984567559
}
rectangle String{
}
rectangle OutputStreamWriter{
	usecase close as UC668760567
		actor1624788833 -- UC668760567
		actor577245010 -- UC668760567
		actor2015261478 -- UC668760567
}
rectangle Writer{
	usecase write as UC1748097277
		actor1624788833 -- UC1748097277
		actor577245010 -- UC1748097277
		actor2015261478 -- UC1748097277
}
rectangle DataList{
	usecase getClassList as UC1037942373
		actor577245010 -- UC1037942373
	usecase getFunctionList as UC1235635586
		actor577245010 -- UC1235635586
	usecase getVarList as UC876962272
		actor577245010 -- UC876962272
}
rectangle PrintStream{
	usecase println as UC1197176722
		actor1624788833 -- UC1197176722
		actor577245010 -- UC1197176722
		actor2015261478 -- UC1197176722
}
rectangle Runtime{
	usecase exec as UC1960253514
		actor1624788833 -- UC1960253514
		actor577245010 -- UC1960253514
		actor2015261478 -- UC1960253514
	usecase getRuntime as UC1370495328
		actor1624788833 -- UC1370495328
		actor577245010 -- UC1370495328
		actor2015261478 -- UC1370495328
}
rectangle ClassDiagram{
	usecase makeFile as UC507061061
		actor2015261478 -- UC507061061
	usecase makeString as UC1478334108
		actor2015261478 -- UC1478334108
	usecase callByDef as UC36550900
		actor2015261478 -- UC36550900
	usecase classExtends as UC726051009
		actor2015261478 -- UC726051009
	usecase classDef as UC492252770
		actor2015261478 -- UC492252770
}
@enduml