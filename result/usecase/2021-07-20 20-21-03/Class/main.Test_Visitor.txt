@startuml
 left to right direction

actor Test_Visitor as actor954742840

	rectangle addDataList{
	 usecase getFullyQualifiedName as UC856880372
	actor954742840--UC856880372
	 usecase getName as UC190490203
	actor954742840--UC190490203
	}
	actor PackageDeclaration as actor1993191331
	 UC63 -- actor1993191331
	actor Name as actor1797763792
	 UC64 -- actor1797763792
	rectangle getStmtList{
	 usecase statements as UC1337347604
	actor954742840--UC1337347604
	 usecase add as UC293618119
	actor954742840--UC293618119
	}
	actor ArrayList as actor170611939
	 UC65 -- actor170611939
	actor Block as actor1548535364
	 UC66 -- actor1548535364
	rectangle typeDeclaration{
	 usecase addData as UC569894199
	actor954742840--UC569894199
	 usecase setComplex as UC854202039
	actor954742840--UC854202039
	}
	actor Class as actor736874772
	 UC67 -- actor736874772
	actor DataList as actor188193734
	 UC68 -- actor188193734
	rectangle fieldDeclaration{
	 usecase addData as UC569894199
	actor954742840--UC569894199
	 usecase getHasList as UC30604162
	actor954742840--UC30604162
	 usecase addImage as UC1656143941
	actor954742840--UC1656143941
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	}
	actor ASTNode as actor1186127045
	 UC69 -- actor1186127045
	actor Member as actor417118375
	 UC70 -- actor417118375
	actor Data_base as actor517787604
	 UC71 -- actor517787604
	actor DataList as actor188193734
	 UC72 -- actor188193734
	rectangle makeFunction{
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	 usecase println as UC115297013
	actor954742840--UC115297013
	 usecase addHas as UC604976394
	actor954742840--UC604976394
	 usecase addData as UC569894199
	actor954742840--UC569894199
	 usecase setHeadNode as UC1886350630
	actor954742840--UC1886350630
	 usecase setCode as UC989001798
	actor954742840--UC989001798
	 usecase setName as UC1794531113
	actor954742840--UC1794531113
	 usecase setComplex as UC923570200
	actor954742840--UC923570200
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	 usecase getHasList as UC30604162
	actor954742840--UC30604162
	}
	actor Data_base as actor517787604
	 UC73 -- actor517787604
	actor StateNode as actor287056540
	 UC74 -- actor287056540
	actor Function as actor927744186
	 UC75 -- actor927744186
	actor Function as actor927744186
	 UC76 -- actor927744186
	actor Function as actor927744186
	 UC77 -- actor927744186
	actor Function as actor927744186
	 UC78 -- actor927744186
	actor DataList as actor188193734
	 UC79 -- actor188193734
	actor Function as actor927744186
	 UC80 -- actor927744186
	actor PrintStream as actor652803980
	 UC81 -- actor652803980
	actor ASTNode as actor1186127045
	 UC82 -- actor1186127045
	rectangle returnStatement{
	 usecase init as UC1238055041
	actor954742840--UC1238055041
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	}
	actor ASTNode as actor1186127045
	 UC83 -- actor1186127045
	actor StateNode as actor287056540
	 UC84 -- actor287056540
	rectangle forStatement{
	 usecase init as UC437583344
	actor954742840--UC437583344
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	 usecase init as UC1238055041
	actor954742840--UC1238055041
	 usecase setCond as UC676060909
	actor954742840--UC676060909
	 usecase add as UC293618119
	actor954742840--UC293618119
	 usecase getBefore as UC1488130490
	actor954742840--UC1488130490
	 usecase setCondElseNode as UC1210856733
	actor954742840--UC1210856733
	 usecase setForFin as UC1978317461
	actor954742840--UC1978317461
	}
	actor ForStateNode as actor1842002393
	 UC85 -- actor1842002393
	actor ForStateNode as actor1842002393
	 UC86 -- actor1842002393
	actor StateNode as actor287056540
	 UC87 -- actor287056540
	actor ArrayList as actor170611939
	 UC88 -- actor170611939
	actor ForStateNode as actor1842002393
	 UC89 -- actor1842002393
	actor StateNode as actor287056540
	 UC90 -- actor287056540
	actor StateNode as actor287056540
	 UC91 -- actor287056540
	actor StateNode as actor287056540
	 UC92 -- actor287056540
	rectangle ifStatement{
	 usecase init as UC1238055041
	actor954742840--UC1238055041
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	}
	actor StateNode as actor287056540
	 UC93 -- actor287056540
	actor StateNode as actor287056540
	 UC94 -- actor287056540
	rectangle expressionStatement{
	 usecase init as UC1238055041
	actor954742840--UC1238055041
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	}
	actor StateNode as actor287056540
	 UC95 -- actor287056540
	actor ASTNode as actor1186127045
	 UC96 -- actor1186127045
	actor StateNode as actor287056540
	 UC97 -- actor287056540
	rectangle assignment{
	 usecase getOwner as UC52477555
	actor954742840--UC52477555
	 usecase findMember as UC1130250604
	actor954742840--UC1130250604
	 usecase getSrcName as UC1794314439
	actor954742840--UC1794314439
	 usecase getHasList as UC30604162
	actor954742840--UC30604162
	 usecase addImage as UC1656143941
	actor954742840--UC1656143941
	}
	actor Member as actor417118375
	 UC98 -- actor417118375
	actor Data_base as actor517787604
	 UC99 -- actor517787604
	actor Data_base as actor517787604
	 UC100 -- actor517787604
	actor DataList as actor188193734
	 UC101 -- actor188193734
	actor Function as actor927744186
	 UC102 -- actor927744186
	rectangle variableDeclarationStatement{
	 usecase init as UC437583344
	actor954742840--UC437583344
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	 usecase getName as UC1257058590
	actor954742840--UC1257058590
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	 usecase addData as UC569894199
	actor954742840--UC569894199
	 usecase setType as UC1278790934
	actor954742840--UC1278790934
	 usecase addImage as UC1656143941
	actor954742840--UC1656143941
	 usecase addHas as UC604976394
	actor954742840--UC604976394
	}
	actor Function as actor927744186
	 UC103 -- actor927744186
	actor Member as actor417118375
	 UC104 -- actor417118375
	actor VarDecNode as actor2111615196
	 UC105 -- actor2111615196
	actor DataList as actor188193734
	 UC106 -- actor188193734
	actor StateNode as actor287056540
	 UC107 -- actor287056540
	actor VariableDeclaration as actor257684104
	 UC108 -- actor257684104
	actor ASTNode as actor1186127045
	 UC109 -- actor1186127045
	actor StateNode as actor287056540
	 UC110 -- actor287056540
	rectangle switchStatement{
	 usecase init as UC437583344
	actor954742840--UC437583344
	 usecase toString as UC1492276401
	actor954742840--UC1492276401
	 usecase getExpression as UC740120508
	actor954742840--UC740120508
	 usecase setThen as UC1015139714
	actor954742840--UC1015139714
	}
	actor StateNode as actor287056540
	 UC111 -- actor287056540
	actor SwitchStatement as actor650608468
	 UC112 -- actor650608468
	actor ASTNode as actor1186127045
	 UC113 -- actor1186127045
	actor StateNode as actor287056540
	 UC114 -- actor287056540

@enduml